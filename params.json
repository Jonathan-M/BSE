{"name":"Bse","tagline":"","body":"`#include <PS2X_lib.h>\r\n#include <Wire.h>\r\n#include <Adafruit_MotorShield.h>\r\n#include \"utility/Adafruit_PWMServoDriver.h\"\r\n#include <Servo.h> \r\n\r\nServo myservo;\r\nAdafruit_MotorShield AFMS = Adafruit_MotorShield();\r\n\r\nPS2X ps2x;\r\n\r\n\r\nAdafruit_DCMotor *RightMotor = AFMS.getMotor(1);\r\nAdafruit_DCMotor *LeftMotor = AFMS.getMotor(2);\r\n//\r\n//int BackUpBeeper = 6;\r\n\r\nfloat pos = 90;\r\nint laserState = LOW;\r\nlong interval = 500;\r\nint beeperState = LOW;\r\nlong previousMillis = 0; \r\nconst int beeperPin =  6;\r\nint laserPin = 2;  \r\n\r\nint horn = 5;\r\nint error = 0;\r\nbool lmotorf = false;\r\nbool rmotorf = false;\r\nbool rmotorb = false;\r\nbool lmotorb = false;\r\nbyte type = 0;\r\nbyte vibrate = 0;\r\n                                \r\n\r\nvoid setup() {\r\n  // put your setup code here, to run once:\r\n  Serial.begin(115200);\r\n  //pinMode(BackUpBeeper, OUTPUT);\r\n//attachInterrupt(0, backup, CHANGE);\r\n  AFMS.begin();\r\n  myservo.attach(3);\r\n//digitalWrite(BackUpBeeper, LOW);\r\npinMode(beeperPin, OUTPUT);\r\npinMode(laserPin, OUTPUT);\r\n//pinMode(1, OUTPUT);\r\n\r\n\r\n\r\n\r\n  error = ps2x.config_gamepad(13, 9, 10, 12, true, true); //setup pins and settings:  GamePad(clock, command, attention, data, Pressures?, Rumble?) check for error\r\n\r\n  if (error == 0)\r\n  {\r\n    Serial.println(\"Found Controller, configured successful\");\r\n    Serial.println(\"Try out all the buttons, X will vibrate the controller, faster as you press harder;\");\r\n    Serial.println(\"holding L1 or R1 will print out the analog stick values.\");\r\n    Serial.println(\"Go to www.billporter.info for updates and to report bugs.\");\r\n  }\r\n  else if (error == 1)\r\n  {\r\n    Serial.println(\"No controller found, check wiring, see readme.txt to enable debug. visit www.billporter.info for troubleshooting tips\");\r\n  }\r\n  else if (error == 2)\r\n  {\r\n    Serial.println(\"Controller found but not accepting commands. see readme.txt to enable debug. Visit www.billporter.info for troubleshooting tips\");\r\n  }\r\n  else if (error == 3)\r\n  {\r\n    Serial.println(\"Controller refusing to enter Pressures mode, may not support it. \");\r\n  }\r\n\r\n  type = ps2x.readType();\r\n  if (type != 1)\r\n  {\r\n    Serial.println(\"warning: DualShock Controller Not Found!\");\r\n  }\r\n}\r\n\r\n\r\n\r\nvoid loop() {\r\n  // put your main code here, to run repeatedly:\r\nunsigned long currentMillis = millis();\r\n//digitalWrite(1, HIGH);\r\n\r\nif (ps2x.Button(PSB_L1)){\r\n  Serial.println(\"Laser Left just pressed\");\r\n  if (pos < 170) {\r\n    pos += .75; // goes from 0 degrees to 180 degrees  in steps of 1 degree \r\n    myservo.write(pos);              // tell servo to go to positio0n in variable 'pos' \r\n  }\r\n}\r\n if (ps2x.Button(PSB_R1)) {\r\n  Serial.println(\"Laser Right just pressed\");\r\n  if (pos > 10) {\r\n    pos -=.75;\r\n    myservo.write(pos);\r\n  }\r\n }\r\n\r\n\r\nif(ps2x.ButtonPressed(PSB_PINK)) { \r\n  Serial.println(\"Pink just pressed\");\r\n   \r\n   if (laserState == LOW) {\r\n      laserState = HIGH;\r\n         }\r\n    else {\r\n     laserState = LOW;\r\n    }\r\n    digitalWrite(laserPin, laserState);\r\n}\r\n\r\n\r\n  if (lmotorf) {\r\n\r\n    LeftMotor->run(BACKWARD);\r\n    LeftMotor->setSpeed(255);\r\n  }\r\n  else if (lmotorb) {\r\n    LeftMotor->run(FORWARD);\r\n    LeftMotor->setSpeed(255);\r\n  }\r\n  else {\r\n    LeftMotor->setSpeed(0);\r\n}\r\n\r\n  if (rmotorf) {\r\n\r\n    RightMotor->run(FORWARD);\r\n    RightMotor->setSpeed(255);\r\n  }\r\n  else if (rmotorb) {\r\n    RightMotor->run(BACKWARD);\r\n    RightMotor->setSpeed(255);\r\n  }\r\n  else {\r\n    RightMotor->setSpeed(0);\r\n\r\n  }\r\n\r\n\r\n  if (error == 1) //skip loop if no controller found\r\n    return;\r\n  if (type == 1)\r\n  {\r\n    ps2x.read_gamepad(false, vibrate);\r\n    //if (ps2x.NewButtonState())               //will be TRUE if any button changes state (on to off, or off to on)\r\n    //{\r\n\r\n vibrate = ps2x.Analog(PSAB_RED);\r\n    if(ps2x.Button(PSB_RED))    {        \r\n         Serial.println(\"Circle just pressed\");\r\n         analogWrite(horn, 130);\r\n    }\r\n    else {\r\n      analogWrite(horn, 0);\r\n    }\r\n\r\n    if (ps2x.Button(PSB_L2)) {\r\n      Serial.println(\"L2 pressed\");\r\n      RightMotor->run(BACKWARD);\r\n      RightMotor->setSpeed(255);\r\n    }\r\n    if (ps2x.Button(PSB_R2)) {\r\n      Serial.println(\"R2 pressed\");\r\n      LeftMotor->run(FORWARD);\r\n      LeftMotor->setSpeed(255);\r\n    }\r\n    if (ps2x.Button(PSB_GREEN)) {\r\n      Serial.println(\"Triangle pressed\");\r\n      LeftMotor->run(BACKWARD);\r\n      LeftMotor->setSpeed(255);\r\n    }\r\n\r\n    // }\r\n\r\n\r\n\r\n    if (ps2x.Button(PSB_PAD_UP)) {\r\n      Serial.println(\"UP Just pressed\");\r\n      RightMotor->run(FORWARD);\r\n      RightMotor->setSpeed(255);\r\n    }\r\n\r\n\r\n     if (ps2x.Button(PSB_GREEN)) {\r\n       if (ps2x.Button(PSB_PAD_UP)) {\r\n         if(currentMillis - previousMillis > interval) {\r\n      // save the last time you blinked the LED \r\n      previousMillis = currentMillis; \r\n\r\n      if (beeperState == LOW) {\r\n      beeperState = HIGH;\r\n         }\r\n    else {\r\n     beeperState = LOW;\r\n    }\r\n        // set the LED with the ledState of the variable:\r\n    digitalWrite(beeperPin, beeperState);\r\n       }\r\n     }\r\n    }\r\n\r\n\r\nif (!ps2x.Button(PSB_GREEN)) {\r\n  if (!ps2x.Button(PSB_PAD_UP)) {\r\n    beeperState = LOW;\r\n    digitalWrite(beeperPin, LOW);\r\n  }\r\n}\r\n\r\n\r\n   \r\n\r\n  }\r\n  delay(50);\r\n}`","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}